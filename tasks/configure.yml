---
# file: pentaho.biserver/tasks/configure.yml
- name: replace pentaho/WEB-INF/web.xml and log4j.xml
  template: >
    src={{ pentahobi_version }}/tomcat/{{ item }}.j2
    dest={{ pentahobi_tomcat_path }}/{{ item }}
  with_items:
    - webapps/pentaho/WEB-INF/classes/log4j.xml

# - name: ensure directories
#   file: >
#     state=directory
#     path={{ pentahobi_solution_path }}/system/{{ item }}
#     owner={{ pentahobi_user }}
#     group={{ pentahobi_group }}
#     mode=0755
#   with_items:
#     - hibernate
#     - jackrabbit

- name: copy jackrabbit repository config file
  template: >
    src={{ pentahobi_version }}/pentaho-solutions/system/jackrabbit/repository.xml.j2
    dest={{ pentahobi_solution_path }}/system/jackrabbit/repository.xml
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  register: jcr_repository
  notify: restart pentaho

- name: Clear old repository
  file: path="{{ pentahobi_solution_path }}/system/jackrabbit/repository/*" state=absent
  when: jcr_repository.changed

- name: hibernate configuration files
  template: >
    src={{ pentahobi_version }}/pentaho-solutions/system/{{ item }}.j2
    dest={{ pentahobi_solution_path }}/system/{{ item }}
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  with_items:
  - hibernate/hibernate-settings.xml
  - hibernate/mysql5.hibernate.cfg.xml
  - hibernate/oracle10g.hibernate.cfg.xml
  - hibernate/postgresql.hibernate.cfg.xml
  - hibernate/sqlserver.hibernate.cfg.xml
  - hibernate/hsql.hibernate.cfg.xml
  notify: restart pentaho

# - name: copy configuration files
#   copy: >
#     src=system/{{ item }}
#     dest={{ pentahobi_solution_path }}/system/{{ item }}
#     owner={{ pentahobi_user }}
#     group={{ pentahobi_group }}
#   with_items:
#     #    - applicationContext-spring-security-jdbc.xml
#     # - karaf/etc/pentaho.marketplace.ba.cfg
#   notify: restart pentaho

- name: copy configuration files
  template: >
    src={{ pentahobi_version }}/pentaho-solutions/system/{{ item }}.j2
    dest={{ pentahobi_solution_path }}/system/{{ item }}
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  with_items:
    - smtp-email/email_config.xml
    - mondrian/mondrian.properties
    - repository.spring.properties
    - applicationContext-spring-security.xml
    - data-access/settings.xml
    - ImportHandlerMimeTypeDefinitions.xml
    - importExport.xml
    - security.properties
  notify: restart pentaho

- name: Copy ldap configuration files
  template: >
    src={{ pentahobi_version }}/pentaho-solutions/system/{{ item }}.j2
    dest={{ pentahobi_solution_path }}/system/{{ item }}
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  with_items:
    - applicationContext-security-ldap.properties
  when: pentahobi_auth_provider == 'ldap'
  notify: restart pentaho

- name: Set jndi
  template: >
    src={{ pentahobi_version }}/tomcat/{{ item }}.j2
    dest={{ pentahobi_tomcat_path }}/{{ item }}
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  notify: restart pentaho
  with_items:
  - webapps/pentaho/WEB-INF/web.xml
  - webapps/pentaho/META-INF/context.xml
  register: set_jndi

- name: Delete jndi cache
  file:
    path: "{{ pentahobi_tomcat_path }}/conf/Catalina/directory/pentaho.xml"
    state: absent
  when: set_jndi.succeeded

- name: Copy jdbc drivers
  copy:
    src="{{ item.path }}/{{ item.filename }}"
    dest="{{ pentahobi_tomcat_path }}/webapps/pentaho/WEB-INF/lib/{{ item.filename }}"
    owner="{{ pentahobi_user }}"
    group="{{ pentahobi_group }}"
  with_items: "{{ pentahobi_jdbc_drivers }}"
  when: "pentahobi_jdbc_drivers is defined"
  notify: restart pentaho

- name: Copy tomcat/conf/server.xml configuration files
  template: >
    src={{ pentahobi_version }}/tomcat/conf/server.xml.j2
    dest={{ pentahobi_tomcat_path }}/conf/server.xml
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
  notify: restart pentaho
