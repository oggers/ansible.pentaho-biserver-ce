---
# file: pentaho.biserver/tasks/deploy.yml
- name: Pentaho group
  group: name="{{ pentahobi_group }}" state=present system=yes

- name: Pentaho user
  user: name="{{ pentahobi_user }}" group="{{ pentahobi_group }}" system=yes

- name: create temp directory
  action: mktemp_dir
  register: _tmp

- name: fetch package
  get_url: >
    url={{ pentahobi_pkg_url }}
    dest={{ _tmp.path }}/{{ pentahobi_pkg_url | basename }}

- name: unpack package to temp directory
  #unarchive: src="/root/{{ pentahobi_pkg_url | basename }}" dest="{{ _tmp.path }}" copy=no
  unarchive: src={{ _tmp.path }}/{{ pentahobi_pkg_url | basename }} dest={{ _tmp.path }} copy=no
  # using unzip instead of unarchivoe due to a bug in ansible 2.1.0.0 related to uncompressing files with spaces in their name
  #command: unzip "{{ _tmp.path }}/{{ pentahobi_pkg_url | basename }} -d {{ _tmp.path }}"
  #command: unzip "/root/{{ pentahobi_pkg_url | basename }}" -d "{{ _tmp.path }}"

- name: copy patch files to remote
  copy: >
    src={{ item }}
    dest={{ _tmp.path }}/
  with_fileglob:
    - '*.patch'

- name: patch PUCLogin.jsp to remove "evaluation login"
  patch: >
    src={{ _tmp.path }}/PUCLogin.jsp.patch
    remote_src=True
    dest={{ _tmp.path }}/{{ pentahobi_extract_dir }}/tomcat/webapps/pentaho/jsp/PUCLogin.jsp

#- name: patch pentaho-spring-beans.xml to remove useless imports
#  patch: >
#    src={{ _tmp.path }}/pentaho-spring-beans.xml.patch
#    remote_src=True
#    dest={{ _tmp.path }}/pentaho-server/pentaho-solutions/system/pentaho-spring-beans.xml

#- name: patch applicationContext-pentaho-security-ldap.xml to customize search scope
#  patch: >
#    src={{ _tmp.path }}/applicationContext-pentaho-security-ldap.xml.patch
#    remote_src=True
#    dest={{ _tmp.path }}/pentaho-server/pentaho-solutions/system/applicationContext-pentaho-security-ldap.xml

#- name: remove unwanted files in webapps/pentaho
#  file: >
#    state=absent
#    path={{ _tmp.path }}/pentaho-server/tomcat/webapps/pentaho/{{ item }}
#  with_items:
#    - META-INF/context.xml  # this would override JNDI resources from server.xml
#    - WEB-INF/jboss-classloading.xml  # useless

#- name: copy webapps
#  command: >
#    cp -Rf {{ _tmp.path }}/pentaho-server/tomcat/webapps/{{ item }} {{ pentahobi_base_dir }}/webapps/
#  with_items:
#    - pentaho
#    - pentaho-style
#    - ROOT

#- name: remove unnecessary configs
#  file: >
#    state=absent
#    path={{ _tmp.path }}/pentaho-server/pentaho-solutions/system/{{ item }}
#  with_items:
#    - dialects  # this seems like a duplication of hibernate/
#    - hibernate  # don't need config for every DB type, we're gonna copy our config instead
#    - simple-jndi  # seems useless
#    - applicationContext-spring-security-jdbc.properties  # replaced with JNDI
#    - applicationContext-spring-security-hibernate.properties  # replaced with JNDI
#    - applicationContext-pentaho-security-memory.xml  # unused
#    - applicationContext-spring-security-memory.xml  # unused
#    - applicationContext-pentaho-security-superuser.xml  # unused
#    - applicationContext-spring-security-superuser.xml  # unused
#    - GettingStartedDB-spring.xml  # uses H2 database
#    - GettingStartedDB.properties  # uses H2 database
#    - quartz/h2-quartz-schema-updated.sql  # useless, it's just for H2 database
#    - smtp-email/email_config_gmail.xml  # useless
#  tags: cleanup

- name: copy pentaho-solutions directory
  command: >
    mv {{ _tmp.path }}/{{ pentahobi_extract_dir }} {{ pentahobi_base_dir }}/

- name: fix files permissions
  file: >
    state=directory
    dest={{ item }}
    owner={{ pentahobi_user }}
    group={{ pentahobi_group }}
    recurse=yes
  with_items:
    - "{{ pentahobi_base_dir }}"
#    - "{{ pentahobi_solution_path }}"


#- name: delete temp directory
#  file: >
#    path={{ _tmp.path }}
#    state=absent
#  tags: cleanup

#- name: ensure pentaho-solutions directory
#  file: >
#    state=directory
#    path={{ pentahobi_base_dir }}
#    owner={{ pentahobi_user }}
#    group={{ pentahobi_group }}
#    mode=0750


